{"version":3,"sources":["assets/images/Cyber-Security-PNG-Background-Image.png","assets/images/cypto1.jpg","assets/images/crypto2.jpg","assets/images/crypto3.jpg","components/Heading/Heading.js","actions/types.js","components/Cyphering/Cyphering.js","actions/postActions.js","components/CypherCore/CypherCore.js","components/Footer/Footer.js","components/Navigation/Navigation.js","reducers/postReducer.js","reducers/index.js","store.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Heading","react_default","a","createElement","className","src","require","alt","Component","OTP","MD5","Cyphering","this","props","initialState","_this","console","log","cryptionType","component_default","defaultChecked","optEncrypt","icons","checked","unchecked","onChange","changeCryption","onClick","changeCryptionType","connect","state","encrypt","cryptionState","dispatch","concat","type","payload","crypto","sha512","CypherCore","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","message","key","result","elapsed","str","alphabet","loading","element","setState","objectSpread","defineProperty","document","querySelector","value","toLowerCase","otpCryption","sha2Encription","md5Encription","length","encryptedMessage","i","newCharCode","indexOf","decryptedMessage","btoa","_this2","md5","createHash","update","digest","fetch","method","then","response","json","data","catch","error","toString","JSON","stringify","_this3","id","placeholder","updateCryptData","chooseCription","Footer","href","Navigation","combineReducers","arguments","undefined","action","middleware","applyMiddleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","App","es","Navigation_Navigation_Navigation","Heading_Heading_Heading","components_CypherCore_CypherCore","components_Cyphering_Cyphering","Footer_Footer_Footer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","getElementById","URL","process","origin","addEventListener","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.87ed2e89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Cyber-Security-PNG-Background-Image.a6cdd4bd.png\";","module.exports = __webpack_public_path__ + \"static/media/cypto1.457b8dd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crypto2.9eaceb2c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crypto3.988f840d.jpg\";","import React, {Component} from 'react';\r\nimport './Heading.scss';\r\n\r\nexport default class Heading extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"heading\">\r\n                    <div className=\"introduction\">\r\n                        <img src={require(\"../../assets/images/Cyber-Security-PNG-Background-Image.png\")}\r\n                             alt=\"cyber security logo\" className=\"introduction__img\"/>\r\n                    </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","export const OTP = 'OTP';\nexport const SHA2 = 'SHA2';\nexport const MD5 = 'MD5';\n\nexport const CHANGE_CRYPTION_TYPE = 'CHANGE_CRYPTION_TYPE';\nexport const CHANGE_CRYPTION = 'CHANGE_CRYPTION';\nexport const INITIAL_STATE = 'INITIAL_STATE';\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Toggle from 'react-toggle';\r\nimport {changeCryption, initialState, changeCryptionType} from '../../actions/postActions';\r\nimport {OTP, SHA2, MD5} from '../../actions/types';\r\n\r\nimport './Cyphering.scss';\r\n\r\nclass Cyphering extends Component {\r\n    componentWillMount() {\r\n        this.props.initialState();\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <div className='cyphers'>\r\n                <div className='cypher'>\r\n                    <img src={require('../../assets/images/cypto1.jpg')} alt='House1' className='cypher__img'/>\r\n                    <h5 className='cypher__name'>OPT</h5>\r\n                    <div className='cypher__description'>\r\n                        <p>Encryption technique that cannot be cracked, but requires the use of a one-time pre-shared\r\n                            key the same size as, or longer than, the message being sent.</p>\r\n                    </div>\r\n                    {this.props.cryptionType === OTP ? (\r\n                        <div className='toggle-cryption'>\r\n                            <Toggle defaultChecked={this.props.optEncrypt} icons={{checked: null, unchecked: null}}\r\n                                    onChange={() => this.props.changeCryption(this.props.optEncrypt)}/>\r\n                            <span className='crypt-state'>{this.props.optEncrypt ? 'Encript' : 'Decrypt'}</span>\r\n                        </div>\r\n                    ) : null}\r\n                    <button\r\n                        className={'btn cypher__btn ' + (this.props.cryptionType === OTP ? 'cypher__btn--selected' : null)}\r\n                        onClick={() => {\r\n                            this.props.changeCryptionType(OTP);\r\n                        }}>\r\n                        {this.props.cryptionType === OTP ? 'Selected' : 'Choose'}\r\n                    </button>\r\n                </div>\r\n                <div className='cypher'>\r\n                    <img src={require('../../assets/images/crypto2.jpg')} alt='House1' className='cypher__img'/>\r\n                    <h5 className='cypher__name'>SHA-2</h5>\r\n                    <div className='cypher__description'>\r\n                        A set of cryptographic hash functions designed by the United States National Security Agency\r\n                        (NSA). They are built using the Merkle–Damgård structure, from a one-way compression function\r\n                        itself built using the Davies–Meyer structure from a (classified) specialized block cipher.\r\n                    </div>\r\n                    <button\r\n                        className={'btn cypher__btn ' + (this.props.cryptionType === SHA2 ? 'cypher__btn--selected' : null)}\r\n                        onClick={() => {\r\n                            this.props.changeCryptionType(SHA2);\r\n                        }}>\r\n                        {this.props.cryptionType === SHA2 ? 'Selected' : 'Choose'}\r\n                    </button>\r\n                </div>\r\n                <div className='cypher'>\r\n                    <img src={require('../../assets/images/crypto3.jpg')} alt='MD5' className='cypher__img'/>\r\n                    <h5 className='cypher__name'>MD5</h5>\r\n                    <p className='cypher__description'>\r\n                        Widely used hash function producing a 128-bit hash value. Although MD5 was initially designed to\r\n                        be used as a cryptographic hash function, it has been found to suffer from extensive\r\n                        vulnerabilities. It can still be used as a checksum to verify data integrity, but only against\r\n                        unintentional corruption.\r\n                    </p>\r\n                    {this.props.cryptionType === MD5 ? (\r\n                        <div className='toggle-cryption'>\r\n                            <Toggle defaultChecked={this.props.optEncrypt} icons={{checked: null, unchecked: null}}\r\n                                    onChange={() => this.props.changeCryption(this.props.optEncrypt)}/>\r\n                            <span className='crypt-state'>{this.props.optEncrypt ? 'Encript' : 'Decrypt'}</span>\r\n                        </div>\r\n                    ) : null}\r\n                    <button\r\n                        className={'btn cypher__btn ' + (this.props.cryptionType === MD5 ? 'cypher__btn--selected' : null)}\r\n                        onClick={() => {\r\n                            this.props.changeCryptionType(MD5);\r\n                        }}>\r\n                        {this.props.cryptionType === MD5 ? 'Selected' : 'Choose'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCyphering.propTypes = {\r\n    changeCryptionType: PropTypes.func.isRequired,\r\n    changeCryption: PropTypes.func.isRequired,\r\n    initialState: PropTypes.func.isRequired,\r\n    optEncrypt: PropTypes.bool,\r\n    cryptionType: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    optEncrypt: state.encrypt.optEncrypt,\r\n    cryptionType: state.encrypt.cryptionType,\r\n});\r\n\r\nexport default connect(mapStateToProps, {changeCryption, initialState, changeCryptionType})(Cyphering);\r\n","import { CHANGE_CRYPTION, INITIAL_STATE, CHANGE_CRYPTION_TYPE } from './types';\n\nexport const changeCryption = cryptionState => (dispatch) => {\n  console.log(`${cryptionState} => ${!cryptionState}`);\n  dispatch({\n    type: CHANGE_CRYPTION,\n    payload: !cryptionState,\n  });\n};\n\nexport const changeCryptionType = cryptionType => dispatch => {\n  dispatch({\n    type: CHANGE_CRYPTION_TYPE,\n    payload: cryptionType,\n  });\n};\n\nexport const initialState = () => dispatch => {\n  dispatch({\n    type: INITIAL_STATE,\n  });\n};\n","import React, { Component } from 'react';\r\nimport './CypherCore.scss';\r\nimport { connect } from 'react-redux';\r\nimport { OTP, SHA2, MD5 } from '../../actions/types';\r\nimport PropTypes from 'prop-types';\r\nconst crypto = require('crypto');\r\nconst sha512 = require('js-sha512');\r\n\r\nclass CypherCore extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: null,\r\n      key: null,\r\n      result: {\r\n        elapsed:'',\r\n        str:'',\r\n      },\r\n      alphabet: 'abcdefghijklmnopqrstuvwxyz',\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  updateCryptData(element) {\r\n    this.setState({\r\n      ...this.state,\r\n      [element]: document.querySelector(`#cryption-${element}`).value.toLowerCase(),\r\n    });\r\n  }\r\n\r\n  chooseCription() {\r\n    switch (this.props.cryptionType) {\r\n    case OTP:\r\n      this.otpCryption();\r\n      break;\r\n    case SHA2:\r\n      this.sha2Encription();\r\n      break;\r\n    case MD5:\r\n      this.md5Encription();\r\n      break;\r\n    default:\r\n      return null;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  otpCryption() {\r\n    if (this.state.message && this.state.key) {\r\n      if (this.props.optEncrypt) {\r\n        if ((this.state.message.length === this.state.key.length) && this.state.message.length > 0) {\r\n          let encryptedMessage = '';\r\n          for (let i = 0; i < this.state.message.length; i++) {\r\n            const newCharCode = (this.state.alphabet.indexOf(this.state.message[i]) + this.state.alphabet.indexOf(this.state.key[i])) % 26;\r\n            encryptedMessage += this.state.alphabet[newCharCode];\r\n          }\r\n          this.setState({ ...this.state, result: {str:encryptedMessage, elapsed: null}});\r\n        }\r\n      } else {\r\n        let decryptedMessage = '';\r\n        for (let i = 0; i < this.state.message.length; i++) {\r\n          let newCharCode = (this.state.alphabet.indexOf(this.state.message[i]) - this.state.alphabet.indexOf(this.state.key[i]));\r\n          if (newCharCode < 0) newCharCode += 26;\r\n          decryptedMessage += this.state.alphabet[newCharCode % 26];\r\n        }\r\n        this.setState({ ...this.state, result: {str:decryptedMessage, elapsed: null }});\r\n      }\r\n    } else {\r\n      this.setState({ ...this.state, result: {str:'INVALID REQUEST', elapsed: null }});\r\n    }\r\n  }\r\n\r\n  sha2Encription() {\r\n    this.setState({...this.state, result: {str: btoa(sha512('hello')), elapsed: null}});\r\n  }\r\n\r\n  md5Encription() {\r\n    if (this.props.optEncrypt) {\r\n      const md5 = crypto.createHash('md5').update(this.state.message).digest('hex', this.state.message);\r\n      this.setState({...this.state, result: {str:md5, elapsed: null }});\r\n    } else {\r\n      this.setState({...this.state, result: {str:'', elapsed: null}, loading:true});\r\n      fetch(`/api/md5/decrypt/${this.state.message}`, {method:'POST'}).then(response =>{\r\n        return response.json();\r\n      }).then(data=>{\r\n          console.log(data);\r\n        this.setState({...this.state, result: {str:data.str, elapsed: data.elapsed+\"s\"}, loading: false});\r\n      }).catch(error => {\r\n        console.log(error.toString());\r\n        console.log(JSON.stringify(error));\r\n        this.setState({...this.state, result: {str:'ERROR!', elapsed: null }, loading: false});\r\n      })\r\n      }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className='description-grid'>\r\n        <div className='description-grid__item--1'>\r\n          <div className='description-grid__img'/>\r\n        </div>\r\n        <div className='description-grid__item--2'>\r\n          <p className='cryption__mode'>{this.props.cryptionType} {this.props.cryptionType === OTP || this.props.cryptionType === MD5 ? ' - '\r\n            + (this.props.optEncrypt ? 'encrypt' : 'decrypt') : null}</p>\r\n          <input id='cryption-message' className='description-grid__message' placeholder='Cryption message' type='text'\r\n            onChange={() => {this.updateCryptData('message');}}/>\r\n          {this.props.cryptionType === OTP ? (\r\n            <input id='cryption-key' className='description-grid__key' placeholder='Cryption key' type='text'\r\n              onChange={() => {this.updateCryptData('key');}}/>) : null}\r\n          <button className='btn__execute' onClick={() => {this.chooseCription();}}>\r\n              Execute\r\n          </button>\r\n          <div className='cryption-result'>\r\n            {console.log(this.state.result)}\r\n            {this.state.loading ? (<div className=\"lds-ripple\"><div> </div><div> </div></div>) : null}\r\n            {this.props.cryptionType === MD5 && !this.props.optEncrypt ? (\r\n                <p>{this.state.result.elapsed}<br/>{this.state.result.str}</p>)\r\n                : (<p>{this.state.result.str}</p>)}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nCypherCore.propTypes = {\r\n  optEncrypt: PropTypes.bool,\r\n  cryptionType: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  optEncrypt: state.encrypt.optEncrypt,\r\n  cryptionType: state.encrypt.cryptionType,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CypherCore);\r\n","import React, {Component} from 'react';\r\nimport './Footer.scss';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\">\r\n                <ul className=\"nav\">\r\n                    <li className=\"nav__item\"><a href=\"#\" className=\"nav__link\">Find your favourite encryption</a></li>\r\n                    <li className=\"nav__item\"><a href=\"#\" className=\"nav__link\">Request proposal</a></li>\r\n                    <li className=\"nav__item\"><a href=\"#\" className=\"nav__link\">Download hash planner</a></li>\r\n                    <li className=\"nav__item\"><a href=\"#\" className=\"nav__link\">Submit your public key</a></li>\r\n                    <li className=\"nav__item\"><a href=\"#\" className=\"nav__link\">Come work with us</a></li>\r\n                </ul>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './Navigation.scss';\r\n\r\nexport default class Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\">\r\n                <ul className=\"nav-head\">\r\n                    <li className=\"nav-head__item nav-head__link\">Welcome</li>\r\n\r\n                </ul>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n","import { INITIAL_STATE, CHANGE_CRYPTION, OTP, CHANGE_CRYPTION_TYPE } from '../actions/types';\n\nconst initialState = {\n  optEncrypt: true,\n  cryptionType: OTP,\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n  case CHANGE_CRYPTION:\n    return {\n      ...state,\n      optEncrypt: action.payload,\n    };\n  case CHANGE_CRYPTION_TYPE:\n    return {\n      ...state,\n      cryptionType: action.payload,\n    };\n  case INITIAL_STATE:\n    return state;\n  default:\n    return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport postReducer from './postReducer';\n\nexport default combineReducers({\n  encrypt: postReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleware =  applyMiddleware(thunk);\n\nconst composeEnhancers =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(middleware)\n);\n\nexport default store;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport './App.scss';\n\nimport Heading from './components/Heading/Heading.js';\nimport Cyphering from './components/Cyphering/Cyphering';\nimport Introduction from './components/CypherCore/CypherCore';\nimport Footer from './components/Footer/Footer';\nimport Navigation from './components/Navigation/Navigation';\n\nimport store from './store';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className='App'>\n          <div className='container'>\n            <Navigation/>\n            <Heading/>\n            <Introduction/>\n            <Cyphering/>\n            <Footer/>\n          </div>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}